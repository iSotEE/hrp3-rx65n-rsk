/*
 *		サンプルプログラム(1)のシステムコンフィギュレーションファイル
 *
 *  $Id: sample1.cfg 449 2018-09-03 05:15:31Z ertl-hiro $
 */
#ifndef TOPPERS_OMIT_TECS
INCLUDE("tecsgen.cfg");
#else /* TOPPERS_OMIT_TECS */
INCLUDE("syssvc/syslog.cfg");
INCLUDE("syssvc/banner.cfg");
INCLUDE("syssvc/serial.cfg");
INCLUDE("syssvc/logtask.cfg");
#endif /* TOPPERS_OMIT_TECS */

#include "sample1.h"

DEF_SCY({ 15000 });
CRE_SOM(SOM1, { TA_NULL, SOM1 });
ATT_TWD({ DOM1, SOM1, 1, 4000 });
ATT_TWD({ DOM2, SOM1, 2, 4000 });
CRE_SOM(SOM2, { TA_NULL, SOM3 });
ATT_TWD({ DOM1, SOM2, 1, 6000 });
ATT_TWD({ DOM2, SOM2, 2, 2000 });
CRE_SOM(SOM3, { TA_NULL, SOM2 });
ATT_TWD({ DOM1, SOM3, 1, 5000 });
ATT_TWD({ DOM2, SOM3, 2, 3000 });

DOMAIN(DOM1) {
	ACV_DOM({ TACP(DOM1), TACP(DOM1), TACP_KERNEL, TACP(DOM1) });
	CRE_TSK(TASK1, { TA_NULL, 1, task, MID_PRIORITY, TASK1_STKSZ, TASK1_STK });
	SAC_TSK(TASK1, { TACP(DOM1)|TACP(DOM2), TACP(DOM1), TACP(DOM1), TACP(DOM1) });
	CRE_TSK(TASK2, { TA_NULL, 2, task, MID_PRIORITY, TASK2_STKSZ, TASK2_STK });
	CRE_TSK(ALM_TASK, { TA_NULL, 0, alarm_task, ALM_PRIORITY, ALM_TASK_STKSZ, ALM_TASK_STK });
	CRE_ALM(ALMHDR1, { TA_NULL, { TNFY_ACTTSK, ALM_TASK }});
}

DOMAIN(DOM2) {
	CRE_TSK(TASK3, { TA_NULL, 3, task, MID_PRIORITY, TASK3_STKSZ, TASK3_STK });
}

KERNEL_DOMAIN {
	CRE_TSK(MAIN_TASK,
				{ TA_ACT, 0, main_task, MAIN_PRIORITY, STACK_SIZE, NULL });
	CRE_TSK(EXC_TASK, { TA_NULL, 0, exc_task, EXC_PRIORITY, STACK_SIZE, NULL });
	CRE_CYC(CYCHDR1, { TA_NULL, { TNFY_HANDLER, 0, cyclic_handler },
																2000000, 0 });
#ifdef INTNO1
	CFG_INT(INTNO1, { INTNO1_INTATR, INTNO1_INTPRI });
	CRE_ISR(INTNO1_ISR, { TA_NULL, 0, INTNO1, intno1_isr, 1 });
#endif /* INTNO1 */
#ifdef CPUEXC1
	DEF_EXC(CPUEXC1, { TA_NULL, cpuexc_handler });
#endif /* CPUEXC1 */
	SAC_SYS({ TACP(DOM1)|TACP(DOM2), TACP(DOM2), TACP_KERNEL, TACP_KERNEL });
}

/* Shared RAM */
ATT_MEM({TA_NULL, 0x2000U, 0x100U});
/* OS RAM */
KERNEL_DOMAIN {
	ATT_MEM({TA_NULL, 0x2100U, 0x10000U});
}
/* Shared ROM */
ATT_MEM({TA_NOWRITE|TA_EXEC, 0xFFF00000U, 0xFFFF0U});
